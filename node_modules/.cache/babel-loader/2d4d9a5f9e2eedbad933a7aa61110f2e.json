{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.StylesContext = exports.sheetsManager = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _warning = _interopRequireDefault(require(\"warning\"));\n\nvar _utils = require(\"@material-ui/utils\");\n\nvar _createGenerateClassName = _interopRequireDefault(require(\"./createGenerateClassName\"));\n\nvar _jss = require(\"jss\");\n\nvar _jssPreset = _interopRequireDefault(require(\"./jssPreset\")); // Default JSS instance.\n\n\nvar jss = (0, _jss.create)((0, _jssPreset.default)()); // Use a singleton or the provided one by the context.\n//\n// The counter-based approach doesn't tolerate any mistake.\n// It's much safer to use the same counter everywhere.\n\nvar generateClassName = (0, _createGenerateClassName.default)(); // Exported for test purposes\n\nvar sheetsManager = new Map();\nexports.sheetsManager = sheetsManager;\nvar defaultOptions = {\n  disableGeneration: false,\n  generateClassName: generateClassName,\n  jss: jss,\n  sheetsCache: typeof window === 'undefined' ? new Map() : null,\n  sheetsManager: sheetsManager,\n  sheetsRegistry: null\n};\n\nvar StylesContext = _react.default.createContext(defaultOptions);\n\nexports.StylesContext = StylesContext;\n\nfunction StylesProvider(props) {\n  var children = props.children,\n      localOptions = (0, _objectWithoutProperties2.default)(props, [\"children\"]);\n  process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(typeof window !== 'undefined' || localOptions.sheetsManager, ['Material-UI: you need to provide a sheetsManager to the StyleProvider ' + 'when rendering on the server.'].join('\\n')) : void 0;\n  return _react.default.createElement(StylesContext.Consumer, null, function (outerOptions) {\n    return _react.default.createElement(StylesContext.Provider, {\n      value: (0, _extends2.default)({}, outerOptions, localOptions)\n    }, children);\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? StylesProvider.propTypes = {\n  /**\n   * You can wrap a node.\n   */\n  children: _propTypes.default.node.isRequired,\n\n  /**\n   * You can disable the generation of the styles with this option.\n   * It can be useful when traversing the React tree outside of the HTML\n   * rendering step on the server.\n   * Let's say you are using react-apollo to extract all\n   * the queries made by the interface server-side.\n   * You can significantly speed up the traversal with this property.\n   */\n  disableGeneration: _propTypes.default.bool,\n\n  /**\n   * JSS's class name generator.\n   */\n  generateClassName: _propTypes.default.func,\n\n  /**\n   * JSS's instance.\n   */\n  jss: _propTypes.default.object,\n\n  /**\n   * @ignore\n   *\n   * In beta.\n   */\n  sheetsCache: _propTypes.default.object,\n\n  /**\n   * The sheetsManager is used to deduplicate style sheet injection in the page.\n   * It's deduplicating using the (theme, styles) couple.\n   * On the server, you should provide a new instance for each request.\n   */\n  sheetsManager: _propTypes.default.object,\n  sheetsRegistry: _propTypes.default.object\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? StylesProvider.propTypes = (0, _utils.exactProp)(StylesProvider.propTypes) : void 0;\n}\n\nStylesProvider.defaultProps = {\n  disableGeneration: false\n};\nvar _default = StylesProvider;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}