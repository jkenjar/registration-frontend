{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _utils = require(\"@material-ui/utils\");\n\nvar _hoistNonReactStatics = _interopRequireDefault(require(\"hoist-non-react-statics\"));\n\nvar _withStyles = _interopRequireDefault(require(\"./withStyles\"));\n\nfunction omit(input, fields) {\n  var output = {};\n  Object.keys(input).forEach(function (prop) {\n    if (fields.indexOf(prop) === -1) {\n      output[prop] = input[prop];\n    }\n  });\n  return output;\n} // styled-components's API removes the mapping between components and styles.\n// Using components as a low-level styling construct can be simpler.\n\n\nfunction styled(Component) {\n  var componentCreator = function componentCreator(style, options) {\n    function StyledComponent(props) {\n      var children = props.children,\n          classes = props.classes,\n          classNameProp = props.className,\n          clone = props.clone,\n          ComponentProp = props.component,\n          other = (0, _objectWithoutProperties2.default)(props, [\"children\", \"classes\", \"className\", \"clone\", \"component\"]);\n      var className = (0, _classnames.default)(classes.root, classNameProp);\n\n      if (clone) {\n        return _react.default.cloneElement(children, {\n          className: (0, _classnames.default)(children.props.className, className)\n        });\n      }\n\n      var spread = other;\n\n      if (style.filterProps) {\n        var omittedProps = style.filterProps;\n        spread = omit(spread, omittedProps);\n      }\n\n      if (typeof children === 'function') {\n        return children((0, _extends2.default)({\n          className: className\n        }, spread));\n      }\n\n      var FinalComponent = ComponentProp || Component;\n      return _react.default.createElement(FinalComponent, (0, _extends2.default)({\n        className: className\n      }, spread), children);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? StyledComponent.propTypes = (0, _extends2.default)({\n      /**\n       * A render function or node.\n       */\n      children: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]),\n      classes: _propTypes.default.object.isRequired,\n      className: _propTypes.default.string,\n\n      /**\n       * If `true`, the component will recycle it's children DOM element.\n       * It's using `React.cloneElement` internally.\n       */\n      clone: (0, _utils.chainPropTypes)(_propTypes.default.bool, function (props) {\n        if (props.clone && props.component) {\n          throw new Error('You can not use the clone and component properties at the same time.');\n        }\n      }),\n\n      /**\n       * The component used for the root node.\n       * Either a string to use a DOM element or a component.\n       */\n      component: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),\n      theme: _propTypes.default.object\n    }, style.propTypes || {}) : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      StyledComponent.displayName = \"Styled(\".concat((0, _utils.getDisplayName)(Component), \")\");\n    }\n\n    var styles = typeof style === 'function' ? function (theme) {\n      return {\n        root: function root(props) {\n          return style((0, _extends2.default)({\n            theme: theme\n          }, props));\n        }\n      };\n    } : {\n      root: style\n    };\n    (0, _hoistNonReactStatics.default)(StyledComponent, Component);\n    return (0, _withStyles.default)(styles, options)(StyledComponent);\n  };\n\n  return componentCreator;\n}\n\nvar _default = styled;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}