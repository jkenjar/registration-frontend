{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getClasses = getClasses;\nexports.attach = attach;\nexports.update = update;\nexports.detach = detach;\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _warning = _interopRequireDefault(require(\"warning\"));\n\nvar _jss = require(\"jss\");\n\nvar _utils = require(\"@material-ui/utils\");\n\nvar _indexCounter = require(\"./indexCounter\");\n\nvar _mergeClasses = _interopRequireDefault(require(\"./mergeClasses\"));\n\nvar _multiKeyStore = _interopRequireDefault(require(\"./multiKeyStore\"));\n\nvar _getStylesCreator = _interopRequireDefault(require(\"./getStylesCreator\"));\n\nvar _getThemeProps = _interopRequireDefault(require(\"./getThemeProps\"));\n\nvar _hoistInternalStatics = _interopRequireDefault(require(\"./hoistInternalStatics\"));\n\nvar _StylesProvider = require(\"./StylesProvider\");\n\nvar _ThemeContext = _interopRequireDefault(require(\"./ThemeContext\")); // We use the same empty object to ref count the styles that don't need a theme object.\n\n\nvar noopTheme = {};\n\nfunction getClasses(_ref) {\n  var classes = _ref.classes,\n      Component = _ref.Component,\n      state = _ref.state,\n      stylesOptions = _ref.stylesOptions;\n\n  if (stylesOptions.disableGeneration) {\n    return classes || {};\n  }\n\n  if (!state.cacheClasses) {\n    state.cacheClasses = {\n      // Cache for the finalized classes value.\n      value: null,\n      // Cache for the last used classes prop pointer.\n      lastProp: null,\n      // Cache for the last used rendered classes pointer.\n      lastJSS: {}\n    };\n  } // Tracks if either the rendered classes or classes prop has changed,\n  // requiring the generation of a new finalized classes object.\n\n\n  var generate = false;\n\n  if (state.classes !== state.cacheClasses.lastJSS) {\n    state.cacheClasses.lastJSS = state.classes;\n    generate = true;\n  }\n\n  if (classes !== state.cacheClasses.lastProp) {\n    state.cacheClasses.lastProp = classes;\n    generate = true;\n  }\n\n  if (generate) {\n    state.cacheClasses.value = (0, _mergeClasses.default)({\n      baseClasses: state.cacheClasses.lastJSS,\n      newClasses: classes,\n      Component: Component\n    });\n  }\n\n  return state.cacheClasses.value;\n}\n\nfunction attach(_ref2) {\n  var state = _ref2.state,\n      props = _ref2.props,\n      theme = _ref2.theme,\n      stylesOptions = _ref2.stylesOptions,\n      stylesCreator = _ref2.stylesCreator,\n      name = _ref2.name;\n\n  if (stylesOptions.disableGeneration) {\n    return;\n  }\n\n  var sheetManager = _multiKeyStore.default.get(stylesOptions.sheetsManager, stylesCreator, theme);\n\n  if (!sheetManager) {\n    sheetManager = {\n      refs: 0,\n      staticSheet: null,\n      dynamicStyles: null\n    };\n\n    _multiKeyStore.default.set(stylesOptions.sheetsManager, stylesCreator, theme, sheetManager);\n  }\n\n  var options = (0, _extends2.default)({}, stylesCreator.options, stylesOptions, {\n    theme: theme,\n    flip: typeof stylesOptions.flip === 'boolean' ? stylesOptions.flip : theme.direction === 'rtl'\n  });\n  options.generateId = options.generateClassName;\n  var sheetsRegistry = stylesOptions.sheetsRegistry;\n\n  if (sheetManager.refs === 0) {\n    var staticSheet;\n\n    if (stylesOptions.sheetsCache) {\n      staticSheet = _multiKeyStore.default.get(stylesOptions.sheetsCache, stylesCreator, theme);\n    }\n\n    var styles = stylesCreator.create(theme, name);\n\n    if (!staticSheet) {\n      staticSheet = stylesOptions.jss.createStyleSheet(styles, (0, _extends2.default)({\n        link: false\n      }, options));\n      staticSheet.attach();\n\n      if (stylesOptions.sheetsCache) {\n        _multiKeyStore.default.set(stylesOptions.sheetsCache, stylesCreator, theme, staticSheet);\n      }\n    }\n\n    if (sheetsRegistry) {\n      sheetsRegistry.add(staticSheet);\n    }\n\n    sheetManager.dynamicStyles = (0, _jss.getDynamicStyles)(styles);\n    sheetManager.staticSheet = staticSheet;\n  }\n\n  if (sheetManager.dynamicStyles) {\n    var dynamicSheet = stylesOptions.jss.createStyleSheet(sheetManager.dynamicStyles, (0, _extends2.default)({\n      link: true\n    }, options));\n    process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(props, 'Material-UI: properties missing.') : void 0;\n    dynamicSheet.update(props).attach();\n    state.dynamicSheet = dynamicSheet;\n\n    if (sheetsRegistry) {\n      sheetsRegistry.add(dynamicSheet);\n    }\n\n    state.classes = (0, _mergeClasses.default)({\n      baseClasses: sheetManager.staticSheet.classes,\n      newClasses: dynamicSheet.classes\n    });\n  } else {\n    state.classes = sheetManager.staticSheet.classes;\n  }\n\n  sheetManager.refs += 1;\n}\n\nfunction update(_ref3) {\n  var state = _ref3.state,\n      props = _ref3.props;\n\n  if (state.dynamicSheet) {\n    state.dynamicSheet.update(props);\n  }\n}\n\nfunction detach(_ref4) {\n  var state = _ref4.state,\n      theme = _ref4.theme,\n      stylesOptions = _ref4.stylesOptions,\n      stylesCreator = _ref4.stylesCreator;\n\n  if (stylesOptions.disableGeneration) {\n    return;\n  }\n\n  var sheetManager = _multiKeyStore.default.get(stylesOptions.sheetsManager, stylesCreator, theme);\n\n  sheetManager.refs -= 1;\n  var sheetsRegistry = stylesOptions.sheetsRegistry;\n\n  if (sheetManager.refs === 0) {\n    _multiKeyStore.default.delete(stylesOptions.sheetsManager, stylesCreator, theme);\n\n    stylesOptions.jss.removeStyleSheet(sheetManager.staticSheet);\n\n    if (sheetsRegistry) {\n      sheetsRegistry.remove(sheetManager.staticSheet);\n    }\n  }\n\n  if (state.dynamicSheet) {\n    stylesOptions.jss.removeStyleSheet(state.dynamicSheet);\n\n    if (sheetsRegistry) {\n      sheetsRegistry.remove(state.dynamicSheet);\n    }\n  }\n} // Link a style sheet with a component.\n// It does not modify the component passed to it;\n// instead, it returns a new component, with a `classes` property.\n\n\nvar withStyles = function withStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return function (Component) {\n    var _options$withTheme = options.withTheme,\n        withTheme = _options$withTheme === void 0 ? false : _options$withTheme,\n        name = options.name,\n        defaultThemeOption = options.defaultTheme,\n        stylesOptions2 = (0, _objectWithoutProperties2.default)(options, [\"withTheme\", \"name\", \"defaultTheme\"]);\n    var stylesCreator = (0, _getStylesCreator.default)(stylesOrCreator);\n    var listenToTheme = stylesCreator.themingEnabled || typeof name === 'string' || withTheme;\n    var defaultTheme = defaultThemeOption || noopTheme;\n    var meta = name;\n\n    if (process.env.NODE_ENV !== 'production' && !meta) {\n      // Provide a better DX outside production.\n      meta = (0, _utils.getDisplayName)(Component);\n      process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(typeof meta === 'string', ['Material-UI: the component displayName is invalid. It needs to be a string.', \"Please fix the following component: \".concat(Component, \".\")].join('\\n')) : void 0;\n    }\n\n    stylesCreator.options = {\n      // Side effect.\n      index: (0, _indexCounter.increment)(),\n      // Use for the global CSS option.\n      name: name || Component.displayName,\n      // Help with debuggability.\n      meta: meta,\n      classNamePrefix: meta\n    };\n\n    var WithStylesInner =\n    /*#__PURE__*/\n    function (_React$Component) {\n      (0, _inherits2.default)(WithStylesInner, _React$Component);\n\n      function WithStylesInner() {\n        var _this;\n\n        (0, _classCallCheck2.default)(this, WithStylesInner);\n        _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(WithStylesInner).call(this));\n        _this.state = {\n          styles: {}\n        };\n        return _this;\n      }\n\n      (0, _createClass2.default)(WithStylesInner, [{\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate() {\n          update({\n            props: this.props,\n            state: this.state.styles\n          });\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          detach({\n            state: this.state.styles,\n            stylesCreator: stylesCreator,\n            stylesOptions: this.props.stylesOptions,\n            theme: this.props.theme\n          });\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this2 = this;\n\n          var _this$props = this.props,\n              classes = _this$props.classes,\n              theme = _this$props.theme,\n              innerRef = _this$props.innerRef,\n              stylesOptions = _this$props.stylesOptions,\n              other = (0, _objectWithoutProperties2.default)(_this$props, [\"classes\", \"theme\", \"innerRef\", \"stylesOptions\"]);\n          var oldTheme = this.theme;\n          this.theme = theme;\n\n          if (oldTheme !== theme) {\n            attach({\n              name: name,\n              props: this.props,\n              state: this.state.styles,\n              stylesCreator: stylesCreator,\n              stylesOptions: stylesOptions,\n              theme: theme\n            });\n\n            if (oldTheme) {\n              // Rerender the component so the underlying component gets the theme update.\n              // By theme update we mean receiving and applying the new class names.\n              setTimeout(function () {\n                detach({\n                  state: _this2.state.styles,\n                  stylesCreator: stylesCreator,\n                  stylesOptions: stylesOptions,\n                  theme: oldTheme\n                });\n              });\n            }\n          }\n\n          var more = (0, _getThemeProps.default)({\n            theme: theme,\n            name: name,\n            props: other\n          }); // Provide the theme to the wrapped component.\n          // So we don't have to use the `withTheme()` Higher-order Component.\n\n          if (withTheme) {\n            more.theme = theme;\n          }\n\n          return _react.default.createElement(Component, (0, _extends2.default)({\n            ref: innerRef,\n            classes: getClasses({\n              classes: classes,\n              Component: Component,\n              state: this.state.styles,\n              stylesOptions: stylesOptions\n            })\n          }, more));\n        }\n      }]);\n      return WithStylesInner;\n    }(_react.default.Component);\n\n    process.env.NODE_ENV !== \"production\" ? WithStylesInner.propTypes = {\n      /**\n       * Override or extend the styles applied to the component.\n       */\n      classes: _propTypes.default.object,\n      stylesOptions: _propTypes.default.object.isRequired,\n      theme: _propTypes.default.object\n    } : void 0;\n\n    var WithStyles = _react.default.forwardRef(function (props, ref) {\n      return _react.default.createElement(_StylesProvider.StylesContext.Consumer, null, function (stylesOptions1) {\n        var stylesOptions = (0, _extends2.default)({}, stylesOptions1, stylesOptions2);\n        return listenToTheme ? _react.default.createElement(_ThemeContext.default.Consumer, null, function (theme) {\n          return _react.default.createElement(WithStylesInner, (0, _extends2.default)({\n            stylesOptions: stylesOptions,\n            ref: ref,\n            theme: theme || defaultTheme\n          }, props));\n        }) : _react.default.createElement(WithStylesInner, (0, _extends2.default)({\n          stylesOptions: stylesOptions,\n          ref: ref,\n          theme: defaultTheme\n        }, props));\n      });\n    });\n\n    process.env.NODE_ENV !== \"production\" ? WithStyles.propTypes = {\n      /**\n       * Override or extend the styles applied to the component.\n       */\n      classes: _propTypes.default.object,\n\n      /**\n       * Use that property to pass a ref callback to the decorated component.\n       */\n      innerRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object])\n    } : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      WithStyles.displayName = \"WithStyles(\".concat((0, _utils.getDisplayName)(Component), \")\");\n    }\n\n    (0, _hoistInternalStatics.default)(WithStyles, Component);\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Exposed for test purposes.\n      WithStyles.Naked = Component;\n      WithStyles.options = options;\n    }\n\n    return WithStyles;\n  };\n};\n\nvar _default = withStyles;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}